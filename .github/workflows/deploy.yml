name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy-services:
    name: Deploy Backend Services
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build services
        run: pnpm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Example: Deploy to AWS ECS, modify based on your deployment strategy
      - name: Deploy to production
        run: |
          echo "Deploy services to production environment"
          # Add your deployment commands here
          # Examples:
          # - Docker build and push
          # - Deploy to Kubernetes
          # - Deploy to AWS ECS/EKS
          # - Deploy to your preferred platform

  deploy-admin-panel:
    name: Deploy Admin Panel
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build admin panel
        run: pnpm --filter @znak-lavki/admin-panel build
        env:
          VITE_API_URL: ${{ secrets.PRODUCTION_API_URL }}

      - name: Deploy to hosting
        run: |
          echo "Deploy admin panel to hosting"
          # Add deployment commands:
          # - Deploy to Vercel, Netlify, or AWS S3+CloudFront
          # Example for Vercel:
          # npx vercel --prod --token=${{ secrets.VERCEL_TOKEN }}

  deploy-mobile-app:
    name: Build Mobile App
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Build mobile app
        working-directory: apps/mobile-app
        run: |
          echo "Build mobile app for production"
          # eas build --platform all --non-interactive


