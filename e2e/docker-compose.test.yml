version: '3.8'

services:
  # PostgreSQL for tests
  postgres-test:
    image: postgres:15-alpine
    container_name: znak-lavki-postgres-test
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_test
      POSTGRES_DB: znak_lavki_test
    ports:
      - '5433:5432'
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ../docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  # Redis for tests
  redis-test:
    image: redis:7-alpine
    container_name: znak-lavki-redis-test
    command: redis-server --requirepass redis_test
    ports:
      - '6380:6379'
    volumes:
      - redis_test_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  # MinIO for tests
  minio-test:
    image: minio/minio:latest
    container_name: znak-lavki-minio-test
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - '9100:9000'
      - '9101:9001'
    volumes:
      - minio_test_data:/data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  # API Gateway for tests
  api-gateway-test:
    build:
      context: ../services/api-gateway
      dockerfile: Dockerfile
    container_name: znak-lavki-api-gateway-test
    environment:
      NODE_ENV: test
      PORT: 3000
      MARK_SERVICE_URL: http://mark-service-test:3001
      INTEGRATION_SERVICE_URL: http://integration-service-test:3002
      NOTIFICATION_SERVICE_URL: http://notification-service-test:3003
    ports:
      - '3100:3000'
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    networks:
      - test-network

  # Mark Service for tests
  mark-service-test:
    build:
      context: ../services/mark-service
      dockerfile: Dockerfile
    container_name: znak-lavki-mark-service-test
    environment:
      NODE_ENV: test
      PORT: 3001
      DB_HOST: postgres-test
      DB_PORT: 5432
      DB_NAME: znak_lavki_test
      DB_USERNAME: postgres
      DB_PASSWORD: postgres_test
      REDIS_HOST: redis-test
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis_test
      MINIO_ENDPOINT: minio-test
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - '3101:3001'
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
      minio-test:
        condition: service_healthy
    networks:
      - test-network

  # Integration Service for tests
  integration-service-test:
    build:
      context: ../services/integration-service
      dockerfile: Dockerfile
    container_name: znak-lavki-integration-service-test
    environment:
      NODE_ENV: test
      PORT: 3002
      DB_HOST: postgres-test
      DB_PORT: 5432
      DB_NAME: znak_lavki_test
      DB_USERNAME: postgres
      DB_PASSWORD: postgres_test
      REDIS_HOST: redis-test
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis_test
    ports:
      - '3102:3002'
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    networks:
      - test-network

  # Notification Service for tests
  notification-service-test:
    build:
      context: ../services/notification-service
      dockerfile: Dockerfile
    container_name: znak-lavki-notification-service-test
    environment:
      NODE_ENV: test
      PORT: 3003
      DB_HOST: postgres-test
      DB_PORT: 5432
      DB_NAME: znak_lavki_test
      DB_USERNAME: postgres
      DB_PASSWORD: postgres_test
      REDIS_HOST: redis-test
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis_test
    ports:
      - '3103:3003'
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    networks:
      - test-network

  # Admin Panel for E2E tests
  admin-panel-test:
    build:
      context: ../apps/admin-panel
      dockerfile: Dockerfile
    container_name: znak-lavki-admin-panel-test
    environment:
      VITE_API_BASE_URL: http://localhost:3101
    ports:
      - '5174:80'
    depends_on:
      - api-gateway-test
      - mark-service-test
    networks:
      - test-network

volumes:
  postgres_test_data:
    driver: local
  redis_test_data:
    driver: local
  minio_test_data:
    driver: local

networks:
  test-network:
    driver: bridge
