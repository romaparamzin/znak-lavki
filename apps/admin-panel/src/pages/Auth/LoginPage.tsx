/**
 * Login Page
 * OAuth login with Yandex
 */

import { useEffect } from 'react';
import { useNavigate, useSearchParams } from 'react-router-dom';
import { Card, Button, Typography, Space, message } from 'antd';
import { LoginOutlined, QrcodeOutlined } from '@ant-design/icons';
import { useAuthStore } from '../../stores/authStore';

const { Title, Text } = Typography;

const LoginPage = () => {
  const navigate = useNavigate();
  const [searchParams] = useSearchParams();
  const { login, isLoading, isAuthenticated } = useAuthStore();

  // Handle OAuth callback
  useEffect(() => {
    const code = searchParams.get('code');
    if (code) {
      // Send code to parent window
      if (window.opener) {
        window.opener.postMessage({ type: 'oauth_success', code }, window.location.origin);
        window.close();
      }
    }

    const error = searchParams.get('error');
    if (error) {
      if (window.opener) {
        window.opener.postMessage({ type: 'oauth_error', error }, window.location.origin);
        window.close();
      }
    }
  }, [searchParams]);

  // Redirect if already authenticated
  useEffect(() => {
    if (isAuthenticated) {
      navigate('/dashboard');
    }
  }, [isAuthenticated, navigate]);

  const handleLogin = async () => {
    try {
      await login();
      message.success('–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
      navigate('/dashboard');
    } catch (error: any) {
      message.error(error.message || '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞');
    }
  };

  // Development mode: bypass OAuth
  const handleDevLogin = () => {
    // Mock user data for development
    const mockUser = {
      id: 'dev-user',
      email: 'admin@znak-lavki.com',
      name: 'Admin User',
      avatar: '',
      role: 'admin' as const,
      permissions: [
        'marks:read',
        'marks:write',
        'marks:delete',
        'analytics:read',
        'settings:write',
      ] as any[],
    };

    const mockTokens = {
      accessToken: 'dev-mock-token',
      refreshToken: 'dev-mock-refresh-token',
    };

    // Save to localStorage
    localStorage.setItem('accessToken', mockTokens.accessToken);
    localStorage.setItem('refreshToken', mockTokens.refreshToken);
    localStorage.setItem('user', JSON.stringify(mockUser));

    message.success('–í—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏');
    navigate('/dashboard');
  };

  return (
    <div
      style={{
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        minHeight: '100vh',
        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
      }}
    >
      <Card
        style={{
          width: 400,
          boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',
        }}
      >
        <Space direction="vertical" size="large" style={{ width: '100%' }}>
          {/* Logo */}
          <div style={{ textAlign: 'center' }}>
            <QrcodeOutlined style={{ fontSize: 48, color: '#1890ff' }} />
            <Title level={2} style={{ marginTop: 16 }}>
              –ó–Ω–∞–∫ –õ–∞–≤–∫–∏
            </Title>
            <Text type="secondary">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–º–∏</Text>
          </div>

          {/* Login button */}
          <Button
            type="primary"
            size="large"
            icon={<LoginOutlined />}
            loading={isLoading}
            onClick={handleLogin}
            block
          >
            –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Yandex
          </Button>

          {/* Development Mode Login */}
          <Button
            size="large"
            onClick={handleDevLogin}
            block
            style={{
              marginTop: 8,
              borderStyle: 'dashed',
              backgroundColor: '#f0f2f5',
            }}
          >
            üîß –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–±–µ–∑ OAuth)
          </Button>

          {/* Info */}
          <div style={{ textAlign: 'center' }}>
            <Text type="secondary" style={{ fontSize: 12 }}>
              –í—Ö–æ–¥ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ OAuth Yandex
            </Text>
            <br />
            <Text type="secondary" style={{ fontSize: 11, color: '#ff4d4f' }}>
              –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ OAuth
            </Text>
          </div>
        </Space>
      </Card>
    </div>
  );
};

export default LoginPage;
