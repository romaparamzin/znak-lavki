# Secrets для хранения чувствительных данных
# ВАЖНО: Этот файл содержит примеры. В production используйте:
# - Sealed Secrets
# - External Secrets Operator
# - Vault
# - Cloud provider secret management

apiVersion: v1
kind: Secret
metadata:
  name: znak-lavki-secrets
  namespace: znak-lavki
type: Opaque
stringData:
  # Database credentials
  # В production замените на реальные значения из secret manager
  DB_USERNAME: "postgres"
  DB_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  
  # Redis password
  REDIS_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  
  # MinIO credentials
  MINIO_ROOT_USER: "minioadmin"
  MINIO_ROOT_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  
  # JWT secrets
  # Сгенерируйте с помощью: openssl rand -base64 32
  JWT_SECRET: "CHANGE_ME_IN_PRODUCTION_USE_STRONG_RANDOM_STRING"
  JWT_REFRESH_SECRET: "CHANGE_ME_IN_PRODUCTION_USE_STRONG_RANDOM_STRING"
  
  # SMTP credentials
  SMTP_USER: "your-email@gmail.com"
  SMTP_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  
  # External integrations
  INTEGRATION_1C_USERNAME: "CHANGE_ME"
  INTEGRATION_1C_PASSWORD: "CHANGE_ME"
  INTEGRATION_WMS_API_KEY: "CHANGE_ME"
  INTEGRATION_PIM_API_KEY: "CHANGE_ME"

---
# Secret для Docker registry (если используется private registry)
apiVersion: v1
kind: Secret
metadata:
  name: regcred
  namespace: znak-lavki
type: kubernetes.io/dockerconfigjson
data:
  # Создайте с помощью:
  # kubectl create secret docker-registry regcred \
  #   --docker-server=<your-registry-server> \
  #   --docker-username=<your-name> \
  #   --docker-password=<your-password> \
  #   --docker-email=<your-email> \
  #   -n znak-lavki --dry-run=client -o yaml
  .dockerconfigjson: e30K

