# Ingress для внешнего доступа к сервисам
# Требует Ingress Controller (nginx-ingress, traefik и т.д.)

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: znak-lavki-ingress
  namespace: znak-lavki
  annotations:
    # Nginx Ingress annotations
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod" # Если используете cert-manager
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/limit-rps: "100"
    
    # CORS
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://znak-lavki.example.com"
    
    # Размер тела запроса (для загрузки файлов)
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    
    # Таймауты
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: SAMEORIGIN";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains";
spec:
  tls:
    - hosts:
        - znak-lavki.example.com
        - api.znak-lavki.example.com
      secretName: znak-lavki-tls # TLS сертификат (создайте через cert-manager)
  
  rules:
    # API Gateway
    - host: api.znak-lavki.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: api-gateway-service
                port:
                  number: 3000
    
    # Admin Panel и API (на одном домене)
    - host: znak-lavki.example.com
      http:
        paths:
          # API endpoints
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: api-gateway-service
                port:
                  number: 3000
          
          # Admin Panel (все остальное)
          - path: /
            pathType: Prefix
            backend:
              service:
                name: admin-panel-service
                port:
                  number: 80

---
# Service для Admin Panel
apiVersion: v1
kind: Service
metadata:
  name: admin-panel-service
  namespace: znak-lavki
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: admin-panel

---
# Deployment для Admin Panel
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-panel
  namespace: znak-lavki
spec:
  replicas: 2
  selector:
    matchLabels:
      app: admin-panel
  template:
    metadata:
      labels:
        app: admin-panel
    spec:
      containers:
        - name: admin-panel
          image: znak-lavki/admin-panel:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10

