# Nginx Configuration - Optimized for High Performance
# Load Balancing + Caching + Security

user nginx;
worker_processes auto;  # Auto-detect number of CPUs
worker_rlimit_nofile 65535;  # Maximum file descriptors
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Load additional modules
load_module modules/ngx_http_geoip_module.so;

events {
    worker_connections 4096;  # Increased from default 1024
    use epoll;  # Efficient connection processing on Linux
    multi_accept on;  # Accept multiple connections at once
}

http {
    # ============================================
    # BASIC SETTINGS
    # ============================================
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main buffer=32k flush=5s;

    # ============================================
    # PERFORMANCE OPTIMIZATIONS
    # ============================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    
    # Reduce timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 16k;
    
    # Output buffering
    output_buffers 1 32k;
    postpone_output 1460;

    # ============================================
    # GZIP COMPRESSION
    # ============================================
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/rss+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;
    gzip_disable "msie6";
    gzip_min_length 256;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;

    # ============================================
    # SECURITY HEADERS
    # ============================================
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Hide nginx version
    server_tokens off;

    # ============================================
    # CACHING
    # ============================================
    # Proxy cache path
    proxy_cache_path /var/cache/nginx/api
        levels=1:2
        keys_zone=api_cache:10m
        max_size=1g
        inactive=60m
        use_temp_path=off;

    proxy_cache_path /var/cache/nginx/static
        levels=1:2
        keys_zone=static_cache:50m
        max_size=10g
        inactive=7d
        use_temp_path=off;

    # ============================================
    # RATE LIMITING
    # ============================================
    # Limit request rate per IP
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=login_limit:10m rate=5r/m;
    
    # Limit connections per IP
    limit_conn_zone $binary_remote_addr zone=addr_limit:10m;
    
    # Limit status
    limit_req_status 429;
    limit_conn_status 429;

    # ============================================
    # UPSTREAM BACKENDS (Load Balancing)
    # ============================================
    
    # Mark Service (with health checks and load balancing)
    upstream mark_service_backend {
        least_conn;  # Load balancing algorithm
        
        # Backend servers
        server mark-service-1:3001 max_fails=3 fail_timeout=30s weight=1;
        server mark-service-2:3001 max_fails=3 fail_timeout=30s weight=1;
        server mark-service-3:3001 max_fails=3 fail_timeout=30s weight=1 backup;
        
        # Keepalive connections
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    # API Gateway
    upstream api_gateway_backend {
        least_conn;
        
        server api-gateway-1:3000 max_fails=3 fail_timeout=30s;
        server api-gateway-2:3000 max_fails=3 fail_timeout=30s;
        
        keepalive 32;
    }
    
    # Integration Service
    upstream integration_service_backend {
        least_conn;
        
        server integration-service-1:3002 max_fails=3 fail_timeout=30s;
        server integration-service-2:3002 max_fails=3 fail_timeout=30s;
        
        keepalive 16;
    }

    # ============================================
    # MAIN SERVER BLOCK
    # ============================================
    server {
        listen 80;
        listen [::]:80;
        server_name znak-lavki.local;
        
        # Redirect to HTTPS
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name znak-lavki.local;
        
        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # Root directory
        root /usr/share/nginx/html;
        index index.html;

        # ============================================
        # API ENDPOINTS (Proxied to backends)
        # ============================================
        
        # Mark Service API
        location /api/v1/marks {
            # Rate limiting
            limit_req zone=api_limit burst=20 nodelay;
            limit_conn addr_limit 10;
            
            # Proxy configuration
            proxy_pass http://mark_service_backend;
            proxy_http_version 1.1;
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Caching for GET requests
            proxy_cache api_cache;
            proxy_cache_methods GET HEAD;
            proxy_cache_valid 200 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout http_500 http_502 http_503;
            proxy_cache_background_update on;
            proxy_cache_lock on;
            add_header X-Cache-Status $upstream_cache_status;
            
            # Don't cache if client sends no-cache
            proxy_cache_bypass $http_cache_control;
        }
        
        # Dashboard/Analytics API (longer cache)
        location ~ ^/api/v1/(dashboard|analytics) {
            limit_req zone=api_limit burst=10 nodelay;
            
            proxy_pass http://mark_service_backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Aggressive caching for analytics
            proxy_cache api_cache;
            proxy_cache_valid 200 30m;
            proxy_cache_use_stale error timeout updating;
            add_header X-Cache-Status $upstream_cache_status;
        }
        
        # Authentication endpoints (rate limited)
        location /api/v1/auth/login {
            limit_req zone=login_limit burst=2 nodelay;
            
            proxy_pass http://api_gateway_backend;
            proxy_http_version 1.1;
            
            # No caching for auth
            proxy_no_cache 1;
            proxy_cache_bypass 1;
        }
        
        # Integration API
        location /api/v1/integration {
            limit_req zone=api_limit burst=50;
            
            proxy_pass http://integration_service_backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Longer timeouts for integrations
            proxy_read_timeout 60s;
        }

        # ============================================
        # STATIC FILES (Frontend)
        # ============================================
        
        # Static assets (aggressive caching)
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
            
            # Serve from cache if exists
            proxy_cache static_cache;
            proxy_cache_valid 200 30d;
            add_header X-Cache-Status $upstream_cache_status;
        }
        
        # Frontend SPA (no cache for HTML)
        location / {
            try_files $uri $uri/ /index.html;
            
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # ============================================
        # HEALTH CHECK
        # ============================================
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }

        # ============================================
        # ERROR PAGES
        # ============================================
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}

